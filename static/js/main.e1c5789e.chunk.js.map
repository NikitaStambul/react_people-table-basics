{"version":3,"sources":["components/AppNavLink.tsx/AppNavLink.tsx","pages/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleList.tsx/PeopleList.tsx","helpers/fillPersonParentsFields.ts","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["AppNavLink","to","text","className","isActive","classNames","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonInfo","person","sex","slug","name","born","died","motherName","fatherName","mother","father","useParams","selectedPersonSlug","href","PeopleList","people","map","fillPersonParentsFields","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","getPeopleFromServer","filledPeople","useEffect","hasPeople","useMemo","Boolean","length","NotFoundPage","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"mQAQaA,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACzC,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,SAOGF,GARsC,ECR9BI,EAAqB,kBAChC,qBAAKH,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,wBAF8B,E,6BCS3B,SAASI,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKb,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECMTc,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1CC,EASED,EATFC,IACAC,EAQEF,EARFE,KACAC,EAOEH,EAPFG,KACAC,EAMEJ,EANFI,KACAC,EAKEL,EALFK,KACAC,EAIEN,EAJFM,WACAC,EAGEP,EAHFO,WACAC,EAEER,EAFFQ,OACAC,EACET,EADFS,OAGF,EAA0CC,cAAlCR,KAAMS,OAAd,MAAmC,GAAnC,EAEA,OACE,qBACE,UAAQ,SACR1B,UAAWE,IAAW,CACpB,yBAA0Be,IAASS,IAHvC,UAME,6BACE,mBACEC,KAAI,mBAAcV,GAClBjB,UAAWE,IAAW,CACpB,kBAA2B,MAARc,IAHvB,SAMGE,MAIL,6BAAKF,IACL,6BAAKG,IACL,6BAAKC,IAEJG,EAEG,6BACE,mBACEvB,UAAU,kBACV2B,KAAI,mBAAcJ,EAAON,MAF3B,SAIGM,EAAOL,SAIZ,6BAAKG,GAAc,MAGtBG,EAEG,6BACE,mBACEG,KAAI,mBAAcH,EAAOP,MAD3B,SAGGO,EAAON,SAIZ,6BAAKI,GAAc,QAI5B,EClEYM,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,wBACE,UAAQ,cACR7B,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACG6B,EAAOC,KAAI,SAAAf,GAAM,OAChB,cAAC,EAAD,CAA8BA,OAAQA,GAArBA,EAAOE,KADR,QAjBmB,E,OCLpC,SAASc,EAAwBF,GACtC,OAAOA,EAAOC,KAAI,SAAAf,GAChB,IAAMQ,EAASM,EAAOG,MAAK,gBAAGd,EAAH,EAAGA,KAAH,OAAcH,EAAOM,aAAeH,CAApC,IACrBM,EAASK,EAAOG,MAAK,gBAAGd,EAAH,EAAGA,KAAH,OAAcH,EAAOO,aAAeJ,CAApC,IAE3B,OAAO,2BACFH,GADL,IAEEQ,SACAC,UAEH,GACF,CCNM,IAAMS,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,iDAAG,yHAEDpC,IAFC,OAElBO,EAFkB,OAGlB8B,EAAeV,EAAwBpB,GAE7CwB,EAAUM,GALc,gDAOxBF,GAAY,GAPY,yBASxBF,GAAa,GATW,4EAAH,qDAazBK,qBAAU,WACRF,GACD,GAAE,IAEH,IAAMG,EAAYC,mBAAQ,kBAAMC,QAAQhB,EAAOiB,OAArB,GAA8B,CAACjB,IAEzD,OACE,sBAAK7B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGoC,GAAa,cAAC,EAAD,IAEbE,GACC,mBAAG,UAAQ,qBAAqBtC,UAAU,kBAA1C,mCAKA2C,IAAcL,IAAaF,GAC3B,mBAAG,UAAQ,kBAAX,+CAKDO,GAAa,cAAC,EAAD,CAAYd,OAAQA,WAK3C,ECxDYkB,EAAyB,kBACpC,qBAAK/C,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,6BAFkC,ECOzBgD,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRhD,UAAU,iCACViD,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKjD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAYF,GAAG,IAAIC,KAAK,SACxB,cAAC,EAAD,CAAYD,GAAG,SAASC,KAAK,kBAKnC,sBAAMC,UAAU,UAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUrD,GAAG,IAAIsD,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aAKlC,EC7BDG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.e1c5789e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const AppNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","export const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    slug,\n    name,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const { slug: selectedPersonSlug = '' } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === selectedPersonSlug,\n      })}\n    >\n      <td>\n        <a\n          href={`#/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </a>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      {mother\n        ? (\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href={`#/people/${mother.slug}`}\n            >\n              {mother.name}\n            </a>\n          </td>\n        ) : (\n          <td>{motherName || '-'}</td>\n        )}\n\n      {father\n        ? (\n          <td>\n            <a\n              href={`#/people/${father.slug}`}\n            >\n              {father.name}\n            </a>\n          </td>\n        ) : (\n          <td>{fatherName || '-'}</td>\n        )}\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleList: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PersonInfo key={person.slug} person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { Person } from '../types';\n\nexport function fillPersonParentsFields(people: Person[]): Person[] {\n  return people.map(person => {\n    const mother = people.find(({ name }) => person.motherName === name);\n    const father = people.find(({ name }) => person.fatherName === name);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PeopleList } from '../../components/PeopleList.tsx';\nimport { fillPersonParentsFields } from '../../helpers/fillPersonParentsFields';\nimport { Person } from '../../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      const response = await getPeople();\n      const filledPeople = fillPersonParentsFields(response);\n\n      setPeople(filledPeople);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  const hasPeople = useMemo(() => Boolean(people.length), [people]);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!hasPeople && !hasError && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {hasPeople && <PeopleList people={people} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { AppNavLink } from './components/AppNavLink.tsx';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <AppNavLink to=\"/\" text=\"Home\" />\n            <AppNavLink to=\"people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}